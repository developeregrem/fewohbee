{% set periodStartDate = timestamp2UTC(today) %}
{% set displayEndDate = today|date_modify("+" ~ intervall ~ "day")|date('U') %}
{% set periodEndDate = timestamp2UTC(displayEndDate) %}
{% set displayMonth = true %}
{% set displayWeek = true %}

{% use 'Reservations/_reservation_table_day.html.twig' %}
<table class="table table-hover table-bordered table-reservation" id="reservation-table">
    <thead>
    {% if displayMonth %}
    <tr id="reservation-table-header-month">
        <td class="text-center"></td>
        {% set firstWasSummer = today|date('I') %}
        {% set lastMonth = today|date('m') %}
        {% set colCount = 0 %}
        {% for i in 0..intervall %}
            {% set addToDate = "+" ~ i ~ "day" %}
            {% set tmpDate = today|date_modify(addToDate) %}
            {# if there is a change from summer to winter time #}
            {% if firstWasSummer == 1 and tmpDate|date('I') == 0 %}
                {% set tmpDate = tmpDate|date_modify("+1 hour") %}
            {% endif %}
            {% set curMonth = tmpDate|date('m') %}
            {# add 2 to colcount since we are at the end of the displayed period
                but add it only if the last day is not the first of the next month (last month was already printed #}
            {% if i == intervall and tmpDate|date('j') != 1 %}{% set colCount = colCount + 2 %}{% endif %}
            {# be aware that when the last month is printed while we are on the first day of the next month already #}
            {% if lastMonth != curMonth or i == intervall %}
                <td class="text-center p-1" colspan="{{ colCount }}">{{ getLocalizedMonth(lastMonth, 'MMM', app.request.locale) }}</td>
                {% set colCount = 2 %}
                {% set lastMonth = curMonth %}
                {# if we reached the end of the period and last day is the first of the next month we need to print the last td #}
                {% if tmpDate|date('j') == 1 and i == intervall %}
                    <td class="text-center p-1" colspan="2">{{ getLocalizedMonth(curMonth, 'MMM', app.request.locale) }}</td>
                {% endif %}
            {% else %}
                {% set colCount = colCount + 2 %}
            {% endif %}
        {% endfor %}
    </tr>
    {% endif %}
    {% if displayWeek %}
    <tr id="reservation-table-header-week">
        <td class="text-center"></td>
        {% set firstWasSummer = today|date('I') %}
        {% set lastWeek = today|date('W') %}
        {% set colCount = 0 %}
        {% for i in 0..intervall %}
            {% set addToDate = "+" ~ i ~ "day" %}
            {% set tmpDate = today|date_modify(addToDate) %}
            {# if there is a change from summer to winter time #}
            {% if firstWasSummer == 1 and tmpDate|date('I') == 0 %}
                {% set tmpDate = tmpDate|date_modify("+1 hour") %}
            {% endif %}
            {% set curWeek = tmpDate|date('W') %}
            {# add 2 to colcount since we are at the end of the displayed period
               but add it only if the last day is not a monday (last cw was already printed #}
            {% if i == intervall and colCount != (2*7) %}{% set colCount = colCount + 2 %}{% endif %}
            {# be aware that when the last cw is printed while we are on monday already #}
            {% if lastWeek != curWeek  or i == intervall %}
                <td class="text-center p-1" colspan="{{ colCount }}">{{ 'reservation.table.calendarweek'|trans }} {{ lastWeek }}</td>
                {% set colCount = 2 %}
                {% set lastWeek = curWeek %}
                {# if we reached the end of the period and last day is a monday we need to print the last td #}
                {% if tmpDate|date('N') == 1 and i == intervall %}
                    <td class="text-center p-1" colspan="2">{{ 'reservation.table.calendarweek'|trans }} {{ curWeek }}</td>
                {% endif %}
            {% else %}
                {% set colCount = colCount + 2 %}
            {% endif %}
        {% endfor %}
    </tr>
    {% endif %}
    <tr class="table-days">
        <th class="text-center">{{ 'reservation.appartment.name'|trans }}</th>
        {% set firstWasSummer = today|date('I') %}
        {% for i in 0..intervall %}
            {% set addToDate = "+" ~ i ~ "day" %}
            {% set tmpDate = today|date_modify(addToDate) %}
            {# if there is a change from summer to winter time #}
            {% if firstWasSummer == 1 and tmpDate|date('I') == 0 %}
                {% set tmpDate = tmpDate|date_modify("+1 hour") %}
            {% endif %}
            {# check for weekend #}
            {% if tmpDate|date('N') == 6 or tmpDate|date('N') == 7 %}
                {% set weekendCss = ' reservation-table-weekend' %}
            {% else %}
                {% set weekendCss = '' %}
            {% endif %}
            {# Holidays #}
            {% if selectedSubdivision == 'all' %}
                {% set showCountry =  holidayCountry %}
            {% else %}
                {% set showCountry =  selectedSubdivision %}
            {% endif %}
            {% set publicdays = getPublicdaysForDay(tmpDate, showCountry, app.request.locale) %}
            {% set holidayText = "" %}
            {% for holiday in publicdays %}
                {% set holidayText = holidayText ~ holiday.name %}
                {% if loop.last == false %}
                    {% set holidayText = holidayText ~ "<br />" %}
                {% endif %}
            {% endfor %}
            {% if holidayText|length > 0 %}
                {% set holidayPopover = 'data-bs-container="body" data-bs-toggle="popover" data-bs-placement="top" data-bs-content="' ~ holidayText ~ '" data-bs-trigger="hover" data-bs-html="true"' %}
                {% set holidayCss = " bg-info bg-opacity-25 holiday-info" %}
            {% else %}
                {% set holidayPopover = "" %}
                {% set holidayCss = "" %}
            {% endif %}
            <th class="text-center{{ weekendCss }}{{ holidayCss }}" colspan="2" {{ holidayPopover|raw }}
                style="width: {{ 100 / (intervall+1) }}%">{{ tmpDate|date('d') }}</th>
        {% endfor %}
    </tr>
    </thead>
    <tbody>
    {% for appartment in appartments %}
        {% set reservations = get_reservations_for_period(today, intervall, appartment) %}
        {% if appartment.multipleOccupancy %}
            {% set multipleReservations = getReservationsMultipleOccupancy(reservations) %}
            {% set printReservations = attribute(multipleReservations, 0) is defined ? attribute(multipleReservations, 0) : [] %}
        {% else %}
            {% set printReservations = reservations %}
        {% endif %}

        {% set j = 0 %}
        {# empty tds between a reservation will get a different number so we can prevent, that user selects a new reservation over an existing #}
        {% set emptyTdNr = 0 %}
        {% set roomInfo = 'appartment.bedsmax'|trans ~ ": " ~ appartment.bedsMax %}
        {% if appartment.multipleOccupancy %} 
            {% set roomInfo = roomInfo ~ ' <i class="fa-solid fa-users" title="' ~ 'apartment.multiple.occupancy.text'|trans ~ '"></i>' %}
        {% endif %}
        <tr>
            <td class="text-center room-info" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="right" data-bs-content="{{ roomInfo }}" data-bs-trigger="hover">
                {{ appartment.number }}{% if appartment.roomCategory.acronym|length > 0 %} ({{ appartment.roomCategory.acronym }}){% endif %}
            </td>
            {% with %}
                {% set reservations = printReservations %}
                {{ block('table_day') }}
            {% endwith %}

        </tr>
        {% if appartment.multipleOccupancy and multipleReservations|length > 1 %}
            {% for i in 1..multipleReservations|length-1 %}
            <tr class="border-top-0">
                <td></td>
                {% with %}
                    {% set reservations = attribute(multipleReservations, i) %}
                    {{ block('table_day') }}
                {% endwith %}
            </tr>
            {% endfor %}
        {% endif %}
    {% endfor %}
    </tbody>
</table>
<script type="text/javascript">
    var tdStartDate = "";
    var tdEndDate = "";
    var tdStartAppartment = "";
    var lastTdNumber = "";
    $('.reservation-inner').popover({
        placement: 'top',
        html: true,
        trigger: 'hover'
    });
    $('.room-info').popover({html: true});
    $('.holiday-info').popover();
    {% if is_granted('ROLE_USER') %}
    $( ".table-reservation" ).selectable({
        filter:'.td-empty',
        cancel:'.reservation',
        selected: function(event, ui){

        },
        selecting: function( event, ui ) {
            if(tdStartDate === "") {
                tdStartDate = $(ui.selecting).attr("data-day");
                tdStartAppartment = $(ui.selecting).attr("data-appartment");
                lastTdNumber = $(ui.selecting).attr("data-tdnumber");
            } else {
                var curAppartment = $(ui.selecting).attr("data-appartment");
                // check if its not the same row
                if(curAppartment !== tdStartAppartment) {
                    $(ui.selecting).removeClass("ui-selectee");
                    $(ui.selecting).removeClass("ui-selecting");
                } else if($(ui.selecting).attr("data-tdnumber") !== lastTdNumber) {
                    // check if user selects over an existing reservation
                    $(ui.selecting).removeClass("ui-selectee");
                    $(ui.selecting).removeClass("ui-selecting");
                } else if($(ui.selecting).attr("data-day") !== tdStartDate) {
                    // only if end is not the same day as start
                    tdEndDate = $(ui.selecting).attr("data-day");
                }
            }
        },
        unselecting: function( event, ui ) {
            // only between an existing reservation
            if($(ui.unselecting).attr("data-tdnumber") === lastTdNumber){
                var curDay = $(ui.unselecting).attr("data-day");
                // if selection starts from left
                if(curDay > tdStartDate) {
                    // we take the privios field
                    tdEndDate = $(ui.unselecting).prev().attr("data-day");
                } else if(curDay < tdStartDate) { // if selection starts from right
                    tdEndDate = $(ui.unselecting).next().attr("data-day");
                }
            }
        },
        start: function( event, ui ) {
            $(".table-reservation").removeClass("table-hover");
        },
        stop: function( event, ui ) {
            if(tdStartDate !== "" && tdEndDate !== "" && tdStartAppartment !== "" && tdStartDate !== tdEndDate) {
                selectableAddAppartmentToSelection(tdStartAppartment, tdStartDate, tdEndDate);
                $('#modalCenter').modal('toggle');
            }
            tdStartDate = "";
            tdEndDate = "";
            tdStartAppartment = "";
            reservationFollows = false;
            lastTdNumber = "";
            $(".table-reservation").addClass("table-hover");
            $(".td-empty").removeClass("ui-selectee");
            $(".td-empty").removeClass("ui-selected");
        }
    });
    {% endif %}
    {#var lastRowDate = "";
    $( ".reservation-inner" ).draggable({
        revert: true,
        containment: "#reservation-table",
        stop( event, ui ) {
            console.log(lastRowDate);
        }
    });
    
    $( ".td-empty" ).droppable({
        accept: ".reservation-inner",
        //activeClass: "ui-state-hover",
        //hoverClass: "ui-state-hover",
        tolerance: "touch",
        drop: function( event, ui ) {
            console.log( $(this).attr("data-day") );
            lastRowDate = $(this).attr("data-day");
           
        },
    });#}
</script>
